{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/hw/day30/notes-app/src/components/NotesList.js\";\nimport React, { Component } from 'react';\nimport { Card, Button, Icon } from 'antd';\nimport { connect } from 'react-redux';\nimport { removeNote } from '../redux/actions/actions';\nimport store from '../redux/store/store';\n\nclass NotesList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDelete = id => () => {\n      this.props.removeNewNote(id);\n      localStorage.setItem('notes', JSON.stringify(store.getState()));\n    };\n  }\n\n  render() {\n    let d = new DateTime();\n    console.log(d);\n    return React.createElement(React.Fragment, null, this.props.notes.map(note => React.createElement(Card, {\n      key: note.id,\n      title: note.title // extra={<Button type=\"danger\" onClick = {this.handleDelete(note.id)}>delete</Button>} \n      ,\n      extra: React.createElement(Icon, {\n        type: \"delete\",\n        onClick: this.handleDelete(note.id),\n        theme: \"filled\",\n        style: {\n          fontSize: '20px',\n          color: '#ff4545'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }),\n      bordered: true,\n      style: {\n        width: 300,\n        marginTop: '10px',\n        boxShadow: '2px 2px 5px #adadad'\n      },\n      headStyle: {\n        color: '#ff5452'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, note.content), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, note.content))));\n  }\n\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    notes: state.notes\n  };\n};\n\nconst mapDispatchToProps = {\n  removeNewNote: removeNote\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesList);","map":{"version":3,"sources":["/Users/admin/Desktop/hw/day30/notes-app/src/components/NotesList.js"],"names":["React","Component","Card","Button","Icon","connect","removeNote","store","NotesList","handleDelete","id","props","removeNewNote","localStorage","setItem","JSON","stringify","getState","render","d","DateTime","console","log","notes","map","note","title","fontSize","color","width","marginTop","boxShadow","content","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAqBC,IAArB,QAAgC,MAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAE9BQ,YAF8B,GAEfC,EAAD,IAAM,MAAK;AACrB,WAAKC,KAAL,CAAWC,aAAX,CAAyBF,EAAzB;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,KAAK,CAACU,QAAN,EAAf,CAA7B;AACH,KAL6B;AAAA;;AAO9BC,EAAAA,MAAM,GAAG;AACL,QAAIC,CAAC,GAAG,IAAIC,QAAJ,EAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACA,WACI,0CACC,KAAKR,KAAL,CAAWY,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IACtB,oBAAC,IAAD;AACI,MAAA,GAAG,EAAIA,IAAI,CAACf,EADhB;AAEI,MAAA,KAAK,EAAEe,IAAI,CAACC,KAFhB,CAGI;AAHJ;AAII,MAAA,KAAK,EAAE,oBAAC,IAAD;AACH,QAAA,IAAI,EAAC,QADF;AAEH,QAAA,OAAO,EAAI,KAAKjB,YAAL,CAAkBgB,IAAI,CAACf,EAAvB,CAFR;AAGH,QAAA,KAAK,EAAC,QAHH;AAIH,QAAA,KAAK,EAAE;AAACiB,UAAAA,QAAQ,EAAC,MAAV;AAAiBC,UAAAA,KAAK,EAAC;AAAvB,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJX;AAUI,MAAA,QAAQ,EAAE,IAVd;AAWI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,SAAS,EAAC,MAAxB;AAA+BC,QAAAA,SAAS,EAAE;AAA1C,OAXX;AAYI,MAAA,SAAS,EAAE;AAACH,QAAAA,KAAK,EAAC;AAAP,OAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IAAI,CAACO,OADV,CAbJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,IAAI,CAACO,OADV,CAhBJ,CADH,CADD,CADJ;AA0BH;;AApC6B;;AAsClC,MAAMC,eAAe,GAAG,UAASC,KAAT,EAAe;AACnC,SAAO;AACLX,IAAAA,KAAK,EAAEW,KAAK,CAACX;AADR,GAAP;AAGD,CAJH;;AAMA,MAAMY,kBAAkB,GAAE;AACtBvB,EAAAA,aAAa,EAAGN;AADM,CAA1B;AAIA,eAAeD,OAAO,CAAC4B,eAAD,EAAiBE,kBAAjB,CAAP,CAA4C3B,SAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Card ,Button,Icon} from 'antd'\nimport {connect} from 'react-redux'\nimport { removeNote } from '../redux/actions/actions'\nimport store from '../redux/store/store'\n\nclass NotesList extends Component {\n\n    handleDelete =(id)=>() =>{\n        this.props.removeNewNote(id) \n        localStorage.setItem('notes',JSON.stringify(store.getState()))\n    }\n\n    render() {\n        let d = new DateTime()\n        console.log(d)\n        return (\n            <>\n            {this.props.notes.map(note => (\n                <Card \n                    key = {note.id}\n                    title={note.title} \n                    // extra={<Button type=\"danger\" onClick = {this.handleDelete(note.id)}>delete</Button>} \n                    extra={<Icon \n                        type=\"delete\" \n                        onClick = {this.handleDelete(note.id)} \n                        theme=\"filled\" \n                        style={{fontSize:'20px',color:'#ff4545'}}/>\n                        } \n                    bordered={true} \n                    style={{ width: 300 ,marginTop:'10px',boxShadow: '2px 2px 5px #adadad'}}\n                    headStyle={{color:'#ff5452'}}>\n                    <p>\n                        {note.content} \n                    </p>\n                    <p>\n                        {note.content} \n                    </p>\n                </Card>  \n            ))}   \n            </>                                \n        )\n    }\n}\nconst mapStateToProps = function(state){\n    return {\n      notes :state.notes,\n    }\n  }\n\nconst mapDispatchToProps ={\n    removeNewNote : removeNote \n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(NotesList)"]},"metadata":{},"sourceType":"module"}