{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/hw/day30/notes-app/src/components/NotesList.js\";\nimport React, { Component } from 'react';\nimport { Card } from 'antd';\nimport { connect } from 'react-redux';\nimport { removeNote } from '../redux/actions/actions';\n\nclass NotesList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDelete = id => () => {\n      this.props.removeNewNote(id);\n    };\n\n    this.saveState = () => {\n      try {\n        localStorage.setItem('notes', JSON.stringify(this.props.notes));\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n  }\n\n  render() {\n    this.saveState();\n    return React.createElement(React.Fragment, null, this.props.notes.map(note => React.createElement(Card, {\n      key: note.id,\n      title: note.title,\n      extra: React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.handleDelete(note.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"delete\"),\n      bordered: true,\n      style: {\n        width: 300,\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, note.content))));\n  }\n\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    notes: state.notes\n  };\n};\n\nconst mapDispatchToProps = {\n  removeNewNote: removeNote\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesList);","map":{"version":3,"sources":["/Users/admin/Desktop/hw/day30/notes-app/src/components/NotesList.js"],"names":["React","Component","Card","connect","removeNote","NotesList","handleDelete","id","props","removeNewNote","saveState","localStorage","setItem","JSON","stringify","notes","error","console","log","message","render","map","note","title","width","marginTop","content","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAE9BK,YAF8B,GAEfC,EAAD,IAAM,MAAK;AACrB,WAAKC,KAAL,CAAWC,aAAX,CAAyBF,EAAzB;AACH,KAJ6B;;AAAA,SAM9BG,SAN8B,GAMlB,MAAM;AACd,UAAI;AACFC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,KAAKN,KAAL,CAAWO,KAA1B,CAA7B;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,KAZ2B;AAAA;;AAc9BC,EAAAA,MAAM,GAAG;AACL,SAAKV,SAAL;AACA,WACI,0CACC,KAAKF,KAAL,CAAWO,KAAX,CAAiBM,GAAjB,CAAqBC,IAAI,IACtB,oBAAC,IAAD;AACI,MAAA,GAAG,EAAIA,IAAI,CAACf,EADhB;AAEI,MAAA,KAAK,EAAEe,IAAI,CAACC,KAFhB;AAGI,MAAA,KAAK,EAAE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAI,KAAKjB,YAAL,CAAkBgB,IAAI,CAACf,EAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHX;AAII,MAAA,QAAQ,EAAE,IAJd;AAKI,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,SAAS,EAAC;AAAxB,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IAAI,CAACI,OADV,CANJ,CADH,CADD,CADJ;AAgBH;;AAhC6B;;AAkClC,MAAMC,eAAe,GAAG,UAASC,KAAT,EAAe;AACnC,SAAO;AACLb,IAAAA,KAAK,EAAEa,KAAK,CAACb;AADR,GAAP;AAGD,CAJH;;AAMA,MAAMc,kBAAkB,GAAE;AACtBpB,EAAAA,aAAa,EAAGL;AADM,CAA1B;AAIA,eAAeD,OAAO,CAACwB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CxB,SAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Card} from 'antd'\nimport {connect} from 'react-redux'\nimport { removeNote } from '../redux/actions/actions'\n\nclass NotesList extends Component {\n\n    handleDelete =(id)=>() =>{\n        this.props.removeNewNote(id) \n    }\n\n    saveState = () => {\n        try {\n          localStorage.setItem('notes',JSON.stringify(this.props.notes))\n        } catch (error) {\n          console.log(error.message)\n        }\n      }\n\n    render() {\n        this.saveState()\n        return (\n            <>\n            {this.props.notes.map(note => (\n                <Card \n                    key = {note.id}\n                    title={note.title} \n                    extra={<a href=\"#\" onClick = {this.handleDelete(note.id)}>delete</a>} \n                    bordered={true} \n                    style={{ width: 300 ,marginTop:'10px'}}>\n                    <p>\n                        {note.content} \n                    </p>\n                </Card>  \n            ))}   \n            </>                                \n        )\n    }\n}\nconst mapStateToProps = function(state){\n    return {\n      notes :state.notes,\n    }\n  }\n\nconst mapDispatchToProps ={\n    removeNewNote : removeNote \n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(NotesList)"]},"metadata":{},"sourceType":"module"}