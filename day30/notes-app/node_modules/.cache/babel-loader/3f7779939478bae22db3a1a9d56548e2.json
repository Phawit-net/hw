{"ast":null,"code":"import { ADD_NOTE, REMOVE_NOTE } from '../actions/actions';\nconst initialState = {\n  notes: []\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NOTE:\n      return {\n        notes: [...state.notes, {\n          id: action.id,\n          title: action.title,\n          content: action.content\n        }]\n      };\n\n    case REMOVE_NOTE:\n      return {\n        notes: state.notes.filter(x => x.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer; // import {combineReducers} from 'redux'\n// import notesReducer from './notesReducer'\n// import visibilityReducer from './visibilityReducer'\n// const reducer = combineReducers({\n//   notes : notesReducer,\n//   visibility : visibilityReducer\n// })\n// export default reducer","map":{"version":3,"sources":["/Users/admin/Desktop/hw/day30/notes-app/src/redux/reducers/reducers.js"],"names":["ADD_NOTE","REMOVE_NOTE","initialState","notes","rootReducer","state","action","type","id","title","content","filter","x"],"mappings":"AACA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,oBAAtC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,SAASC,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2CI,MAA3C,EAAmD;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,QAAL;AACE,aAAO;AACLG,QAAAA,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KADJ,EAEL;AACEK,UAAAA,EAAE,EAAEF,MAAM,CAACE,EADb;AAEEC,UAAAA,KAAK,EAAEH,MAAM,CAACG,KAFhB;AAGEC,UAAAA,OAAO,EAAEJ,MAAM,CAACI;AAHlB,SAFK;AADF,OAAP;;AAUF,SAAKT,WAAL;AACE,aAAO;AACLE,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYQ,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASF,MAAM,CAACE,EAAxC;AADF,OAAP;;AAIF;AACE,aAAOH,KAAP;AAlBJ;AAoBD;;AAED,eAAeD,WAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["\nimport { ADD_NOTE, REMOVE_NOTE } from '../actions/actions'\n\nconst initialState = {\n  notes: []\n}\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NOTE:\n      return {\n        notes: [\n          ...state.notes,\n          {\n            id: action.id,\n            title: action.title,\n            content: action.content\n          }\n        ]\n      }\n    case REMOVE_NOTE:\n      return {\n        notes: state.notes.filter(x => x.id !== action.id)\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default rootReducer\n\n// import {combineReducers} from 'redux'\n// import notesReducer from './notesReducer'\n// import visibilityReducer from './visibilityReducer'\n\n// const reducer = combineReducers({\n//   notes : notesReducer,\n//   visibility : visibilityReducer\n// })\n\n// export default reducer"]},"metadata":{},"sourceType":"module"}